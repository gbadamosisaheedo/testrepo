peline {
    agent any

        stages {
	        stage('Git Clone') {
		            steps {
			                    git branch: 'main', url: 'https://github.com/gbadamosisaheedo/testrepo'
					                }
							        }
								        
									        stage("SonarQube analysis") {
										           steps {
											                withSonarQubeEnv('sonar') {
													                 sh 'mvn clean package sonar:sonar'
															              }
																                 }
																		         }
																			         
																				         
																					         stage('UNit Test stage') {
																						             steps {
																							                     sh 'mvn test'
																									                 }
																											             
																												             }
																													                 
																															             stage('Publish the test report') {
																																                 steps {
																																		                 junit 'target/surefire-reports/TEST-com.example.mywebapp.RegisterServletTest.xml'
																																				             }
																																					             }
																																						             
																																							             stage('Build stage') {
																																								                 steps {
																																										                 sh 'mvn package'
																																												             }
																																													             }
																																														             
																																															             stage('Code Quality') {
																																																                 steps {
																																																		                 echo 'Code Quality Report'
																																																				             }
																																																					             }
																																																						             
																																																							             stage('Deploy to Tomcat') {
																																																								                 steps {
																																																										                 deploy adapters: [tomcat9(credentialsId: 'home', path: '', url: 'http://52.202.3.199:8080')], contextPath: 'demo', war: '**/*.war'
																																																												             }
																																																													             }
																																																														         }
																																																															 }pipeline {
    agent any

    stages {
        stage('Git Clone') {
            steps {
                git branch: 'main', url: 'https://github.com/gbadamosisaheedo/testrepo'
            }
        }
        
        stage("SonarQube analysis") {
           steps {
             withSonarQubeEnv('sonar') {
                 sh 'mvn clean package sonar:sonar'
             }
           }
        }
        
        
        stage('UNit Test stage') {
            steps {
                sh 'mvn test'
            }
            
        }
            
            stage('Publish the test report') {
            steps {
                junit 'target/surefire-reports/TEST-com.example.mywebapp.RegisterServletTest.xml'
            }
        }
        
        stage('Build stage') {
            steps {
                sh 'mvn package'
            }
        }
        
        stage('Code Quality') {
            steps {
                echo 'Code Quality Report'
            }
        }
        
        stage('Deploy to Tomcat') {
            steps {
                deploy adapters: [tomcat9(credentialsId: 'home', path: '', url: 'http://52.202.3.199:8080')], contextPath: 'demo', war: '**/*.war'
            }
        }
    }
}
